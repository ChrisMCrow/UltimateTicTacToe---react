{"version":3,"sources":["components/LocalBoard.jsx","components/GlobalBoard.jsx","components/Header.jsx","components/Status.jsx","components/App.jsx","index.jsx","reducers/boardReducer.js","reducers/gameStatusReducer.js","reducers/index.js"],"names":["LocalBoard","props","handleMark","square","gameStatus","lastSquare","boardId","localData","position","dispatch","type","squareId","mark","playerTurn","winConditions","action","targetDiv","document","getElementById","concat","i","length","threeInARow","j","appendChild","createTextNode","classList","add","includes","checkWin","globalCheckWin","gameAction","boardData","boardWinner","react_default","a","createElement","className","id","jsx","map","index","key","onClick","GlobalBoard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","target","remove","boardWinnerCount","filter","lBoard","_this2","window","location","reload","board","bgColor","components_LocalBoard","React","Component","connect","state","Header","Status","winner","gameWinner","getWinner","App","components_Header","components_Status","components_GlobalBoard","initialState","rootReducer","combineReducers","arguments","undefined","newState","slice","assign","store","createStore","ReactDOM","render","react_hot_loader","react_router_dom_es","es"],"mappings":"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","file":"static/js/main.546d0789.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction LocalBoard(props) {\n  function handleMark(square) {\n    let devMode = false; // true = place mark anywhere. false = game mode.\n    if (props.gameStatus.lastSquare === props.boardId || props.gameStatus.lastSquare === null || devMode) {\n      if (props.localData.position[square] === null) {\n        const { dispatch } = props;\n        const boardAction = {\n          type: 'MARK',\n          squareId: square,\n          boardId: props.boardId,\n          mark: props.gameStatus.playerTurn\n        };\n        dispatch(boardAction);\n        checkWin();\n        props.globalCheckWin();\n        let gameAction = {\n          type: 'NEXT_TURN',\n          lastSquare: square\n        };\n        if (props.boardData[square].boardWinner) {\n          gameAction.lastSquare = null;\n        }\n        dispatch(gameAction);\n      }\n    }\n  }\n\n  function checkWin() {\n    let square = props.localData.position;\n    let winConditions = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    const { dispatch } = props;\n    let action = {\n      type: 'LOCAL_WINNER',\n      boardId: props.boardId,\n      mark: null\n    };\n    let targetDiv = document.getElementById(`board${props.boardId}`);\n    for (let i = 0; i < winConditions.length; i++) {\n      let threeInARow = 0;\n      for (let j = 0; j <= 2; j++) {\n        if (square[winConditions[i][j]] === props.gameStatus.playerTurn) {\n          threeInARow++;\n        }\n      }\n      if (threeInARow === 3) {\n        action.mark = props.gameStatus.playerTurn;\n        targetDiv.appendChild(document.createTextNode(`${action.mark}`));\n        if (action.mark === 'X') {\n          targetDiv.classList.add('mark-x');\n        } else {\n          targetDiv.classList.add('mark-o');\n        }\n        return dispatch(action);\n      } else if (!props.localData.position.includes(null)) {\n        action.mark = 'cat';\n        return dispatch(action);\n      }\n    }\n  }\n\n  return (\n    <div className='local-wrapper' id='local-board'>\n      <style jsx>{`\n        #lc-board3, #lc-board4, #lc-board5 {\n          border-top: 2px solid #D90E79;\n          border-bottom: 2px solid #D90E79;\n        }\n        #lc-board1, #lc-board4, #lc-board7 {\n          border-left: 2px solid #D90E79;\n          border-right: 2px solid #D90E79;\n        }\n        .player-mark {\n          padding-top: 10px;\n          font-size: 42px;\n          color: #ccccc5;\n        }\n        .square {\n          text-align: center;\n          height: 80px;\n          width: 80px;\n          float: left;\n        }\n        #local-board {\n          margin: 5px 0 0 5px;\n        }\n        .board-winner {\n          position: absolute;\n          text-align: center;\n          top: -10px;\n          left: 0;\n          right: auto;\n          font-size: 265px;\n          z-index: 1;\n          line-height: 1;\n          width: 240px;\n          cursor: default;\n        }\n        .square-wrapper {\n          position: relative;\n        }\n        .cat {\n          height: 200%;\n        } \n        .mark-x {\n          color: #FF217C;\n          cursor: default;\n        }\n        .mark-o {\n          color: #0EFEE0;\n          cursor: default;\n        }\n      `}</style>\n      {props.localData.position.map((square, index) => (\n        <div className='square-wrapper' key={index} onClick={() => { handleMark(index); }}>\n          <div className='board-winner' id={`board${props.boardId}`}>\n          </div>\n          <div className='player-mark square' id={'lc-board' + index}>\n            {props.localData.boardWinner ? (\n              <p>{square}</p>\n            ) : (\n              square === 'X' ? (\n                <p className='mark-x'>{square}</p>\n              ) : (\n                <p className='mark-o'>{square}</p>\n              )\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nLocalBoard.propTypes = {\n  boardId: PropTypes.number,\n  localData: PropTypes.object,\n  dispatch: PropTypes.func,\n  gameStatus: PropTypes.object,\n  boardData: PropTypes.array,\n  globalCheckWin: PropTypes.func\n};\n\nexport default LocalBoard;","import React from 'react';\nimport LocalBoard from './LocalBoard';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n\nclass GlobalBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.checkWin = this.checkWin.bind(this);\n  }\n\n  componentDidUpdate() {\n    for (let i = 0; i < this.props.boardData.length; i++) {\n      let target = document.getElementById(`gl-board${i}`);\n      if (this.props.boardData[i].boardWinner) {\n        target.classList.remove('mark-playable');\n        target.classList.add('not-playable');\n      } else if (!(this.props.boardData[i].position.includes(null))) {\n        target.classList.remove('mark-playable');\n        target.classList.add('cat-condition');\n      } else if (this.props.gameStatus.lastSquare === i || this.props.gameStatus.lastSquare === null) {\n        target.classList.add('mark-playable');\n      } else {\n        target.classList.remove('mark-playable');\n      }\n    }\n  }\n\n  checkWin() {\n    let winConditions = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    const { dispatch } = this.props;\n    let action = {\n      type: 'GLOBAL_WINNER',\n      boardId: this.props.boardId,\n      mark: null\n    };\n    let targetDiv = document.getElementById('gameBoard');\n    let boardWinnerCount = this.props.boardData.filter( lBoard => (lBoard.boardWinner !== null)).length;\n    for (let i = 0; i < winConditions.length; i++) {\n      let threeInARow = 0;\n      for (let j = 0; j <= 2; j++) {\n        if (this.props.boardData[winConditions[i][j]].boardWinner === this.props.gameStatus.playerTurn) {\n          threeInARow++;\n        }\n      }\n      if (threeInARow === 3) {\n        action.mark = this.props.gameStatus.playerTurn;\n        targetDiv.appendChild(document.createTextNode(`${action.mark}`));\n        if (action.mark === 'X') {\n          targetDiv.classList.add('mark-x', 'animated', 'flash', 'infinite');\n        } else {\n          targetDiv.classList.add('mark-o', 'animated', 'flash', 'infinite');\n        }\n        return dispatch(action);\n      } else if (boardWinnerCount >= 9) {\n        action.mark = 'cat';\n        return dispatch(action);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className='wrapper'>\n        <style jsx>{`\n          h3 {\n            text-align: center;\n            margin-bottom: 5px;\n          }\n          .wrapper {\n            width: 800px;\n            margin: 0px auto 100px auto;\n            background-color: white;\n          }\n          .local-board {\n            background-color: rgba(0, 0, 0, .8);\n            float: left;\n            width: 260px;\n            height: 260px;\n          }\n          #gl-board3, #gl-board4, #gl-board5 {\n            border-top: 5px solid #97de00;\n            border-bottom: 5px solid #97de00;\n          }\n          #gl-board1, #gl-board4, #gl-board7 {\n            border-left: 5px solid #97de00;\n            border-right: 5px solid #97de00;\n          }\n          #gl-board8 {\n            margin-bottom: 80px;\n          }  \n          .global-winner {\n            position: absolute;\n            text-align: center;\n            top: 340px;\n            left: 0;\n            right: auto;\n            font-size: 800px;\n            z-index: 2;\n            line-height: 1;\n            width: 100vw;\n            cursor: pointer;\n          }          \n          .not-playable {\n            background-color: rgba(100, 71, 109, .8);\n          } \n          .cat-condition {\n          }\n          .x-condition {\n            background-color: pink;\n          }\n          .o-condition {\n            background-color: gold;\n          }\n          .mark-playable {\n            background-color: rgba(254, 207, 135, .8);\n            cursor: pointer;\n          }\n          .status-bar {\n            float: right;\n            text-align: right;\n          }\n          .mark-x {\n            color: #FF217C;\n            text-shadow: 1px 1px 0px black, 1px -1px 0px black, -1px 1px 0 black, -1px -1px 0 black;\n          }\n          .mark-o {\n            color: #0EFEE0;\n            text-shadow: 1px 1px 0px black, 1px -1px 0px black, -1px 1px 0 black, -1px -1px 0 black;\n          }\n  \n        `}</style>\n        <div className='global-winner' id='gameBoard' onClick={() => window.location.reload()}>\n        </div>\n        {this.props.boardData.map((board, index) => (\n          <div key={index}  className={`${this.bgColor} local-board mark-playable`} id={'gl-board' + index}>\n            <LocalBoard\n              gameStatus={this.props.gameStatus}\n              dispatch={this.props.dispatch}\n              localData={board}\n              boardData={this.props.boardData}\n              boardId={index}\n              globalCheckWin={this.checkWin}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nGlobalBoard.propTypes = {\n  boardData: PropTypes.array,\n  dispatch: PropTypes.func,\n  gameStatus: PropTypes.object,\n  boardId: PropTypes.number\n};\n\nconst mapStateToProps = state => {\n  return {\n    boardData: state.boardData,\n    gameStatus: state.gameStatus\n  };\n};\n\nexport default connect(mapStateToProps)(GlobalBoard);","\nimport React from 'react';\n\nfunction Header() {\n  return (\n    <div className='jumbotron'>\n      <style jsx>{`\n        .jumbotron {\n          background-color: black;\n          text-align: center;\n        }\n        .jumbotron h1 {\n          font-size: 70px;\n        }\n      `}</style>\n      <h1>Ultimate Tic-Tac-Toe</h1>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Status extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getWinner() {\n    let winner = (this.props.gameStatus.gameWinner);\n    if (winner) {\n      return <h3 className='win-status'>The Winner is player \"{winner}\"! Click the board to play again!</h3>;\n    }\n  }\n  render() {\n    return (\n      <div className='status'>\n        <style jsx>{`\n            .status {\n              padding: 0 20px 20px 0;\n              text-align: right;\n            }\n            .status h3 {\n              color: #FECF87;\n              font-weight: bold;\n              font-size: 40px;\n              text-shadow: 1px 1px 0px black, 1px -1px 0px black, -1px 1px 0 black, -1px -1px 0 black;\n            }\n            .win-status {\n              text-align: center;\n            }\n          }\n        `}</style>\n        <div >\n          <h3 >Player Turn: {this.props.gameStatus.playerTurn}</h3>\n          {this.getWinner()}\n        </div>\n      </div>\n    );\n  }\n}\n\nStatus.propTypes = {\n  gameStatus: PropTypes.object,\n};\n\nconst mapStateToProps = state => {\n  return {\n    gameStatus: state.gameStatus\n  };\n};\n\nexport default connect(mapStateToProps)(Status);","import React from 'react';\nimport GlobalBoard from './GlobalBoard';\nimport Header from './Header';\nimport Status from './Status';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Status />\n      <GlobalBoard />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { AppContainer } from 'react-hot-loader';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './index.css';\nimport 'animate.css/animate.css';\n\nconst store = createStore(rootReducer);\n\n// let unsubscribe = store.subscribe(() => \n//   console.log()\n// );\n\nconst render = (Component) => {\n  ReactDOM.render(\n    <AppContainer>\n      <HashRouter>\n        <Provider store={store}>\n          <Component/>\n        </Provider>\n      </HashRouter>\n    </AppContainer>,\n    document.getElementById('react-app-root')\n  );\n};\n\nrender(App);\n\n/*eslint-disable */\nif (module.hot) {\n  module.hot.accept('./components/App', () => {\n    render(App)\n  });\n}\n/*eslint-enable */\n","const initialState = [\n  {\n    boardWinner: null,\n    position: [null, null, null,\n      null, null, null,\n      null, null, null]\n  },\n  {\n    boardWinner: null,\n    position: [null, null, null,\n      null, null, null,\n      null, null, null]\n  },\n  {\n    boardWinner: null,\n    position: [null, null, null,\n      null, null, null,\n      null, null, null]\n  },\n  {\n    boardWinner: null,\n    position: [null, null, null,\n      null, null, null,\n      null, null, null]\n  },\n  {\n    boardWinner: null,\n    position: [null, null, null,\n      null, null, null,\n      null, null, null]\n  },\n  {\n    boardWinner: null,\n    position: [null, null, null,\n      null, null, null,\n      null, null, null]\n  },\n  {\n    boardWinner: null,\n    position: [null, null, null,\n      null, null, null,\n      null, null, null]\n  },\n  {\n    boardWinner: null,\n    position: [null, null, null,\n      null, null, null,\n      null, null, null]\n  },\n  {\n    boardWinner: null,\n    position: [null, null, null,\n      null, null, null,\n      null, null, null]\n  },\n\n];\n\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case 'MARK': {\n    const { squareId, boardId, mark } = action;\n    let newState = state.slice();\n    newState[boardId].position[squareId] = mark;\n    return newState;\n  }\n  case 'LOCAL_WINNER': {\n    const { boardId, mark } = action;\n    let newState = state.slice();\n    newState[boardId].boardWinner = mark;\n    return newState;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\n","const initialState = {\n  playerTurn: 'X',\n  lastSquare: null,\n  gameWinner: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case 'NEXT_TURN': {\n    const { lastSquare } = action;\n    let newState = Object.assign({}, state);\n    newState.playerTurn = (newState.playerTurn === 'X' ?  'O' : 'X');\n    newState.lastSquare = lastSquare;\n    return newState;\n  }\n  case 'GLOBAL_WINNER': {\n    const { mark } = action;\n    let newState = Object.assign({}, state);\n    newState.gameWinner = mark;\n    return newState;\n  }  \n  default: {\n    return state;\n  }\n  }\n};","\nimport boardReducer from './boardReducer';\nimport gameStatusReducer from './gameStatusReducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n  boardData: boardReducer,\n  gameStatus: gameStatusReducer\n});\n\nexport default rootReducer;"],"sourceRoot":""}